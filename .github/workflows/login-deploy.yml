name: Docker Build and Deploy Login Microservice

on:
  push:
    branches:
      - test

jobs:
  build_docker_login:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd login
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Crear archivo .env
        run: |
          cd login
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Run static tests
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_PORT: ${{ secrets.DB_PORT }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          cd login
          pytest tests/test_connections.py

      - name: Build Docker image
        run: |
          cd login
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/login:latest .

  push_dockerhub_login:
    needs: build_docker_login
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          cd login
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/login:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/login:latest

  deploy_ec2_login:
    needs: push_dockerhub_login
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_AUTH_TEST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker stop login || true
            docker rm login || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/login:latest
            docker run -d --name login \
              -p 1001:1001 \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_PORT=${{ secrets.DB_PORT }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e EC2_SSH_KEY=${{ secrets.EC2_SSH_KEY }} \
              -e DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }} \
              -e DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
              -e EC2_AUTH_TEST=${{ secrets.EC2_AUTH_TEST }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/login:latest