# FastAPI Microservices Project

This project is a FastAPI-based application designed for handling authentication and database interaction via RESTful APIs. It is built with a modular approach, focusing on microservices to provide scalability and maintainability.

---

## üõ†Ô∏è Technologies Used

- **Programming Language**: Python 3.9+
- **Web Framework**: [FastAPI](https://fastapi.tiangolo.com/) for creating modern, fast, and efficient REST APIs.
- **Database**: PostgreSQL (using SQLAlchemy ORM for database interaction).
- **Authentication**: JWT (JSON Web Tokens) for secure user authentication.
- **Containerization**: Docker for creating a containerized environment for easier deployment and scalability.

---

## üèóÔ∏è Architecture

This microservice-based architecture is divided into modular components, including authentication and database management, which interact through REST APIs.

- **FastAPI**: Handles all HTTP requests and responses for the microservices.
- **SQLAlchemy**: Provides Object-Relational Mapping (ORM) to interact with the PostgreSQL database.
- **JWT**: Used to authenticate and authorize users securely.
- **Docker**: The application is containerized to ensure consistent deployment across different environments.

---

## ‚öôÔ∏è Running the Application
Once the dependencies are installed and the environment variables are set, you can run the FastAPI application with:

bash
Copiar
uvicorn main:app --reload --host 0.0.0.0 --port 1001
Your FastAPI app will be running at http://localhost:1001, and you can interact with the API.



## üñ•Ô∏è Features

- **Authentication System**: Secure login with JWT tokens.
- **Database Interaction**: Seamless connection to PostgreSQL with SQLAlchemy ORM.
- **Easy Scalability**: The modular approach allows easy scaling of services in a microservice architecture.

---

## üöÄ Installation & Setup

### 1. Clone the Repository

Clone this repository to your local machine:

```bash
git clone https://github.com/jelizalde04/auth-domain.git
cd auth-domain


## ‚öôÔ∏è Running the Application
Once the dependencies are installed and the environment variables are set, you can run the FastAPI application with:

bash
Copiar
uvicorn main:app --reload --host 0.0.0.0 --port 1001
Your FastAPI app will be running at http://localhost:1001, http://localhost:1001/api-docs-login and you can interact with the API.


## üßë‚Äçüíª Endpoints (Routes)
Here‚Äôs a list of available routes for authentication and services:

### 1. Authentication
POST /auth/login

Description: Authenticates a user and returns a JWT token.

Request Body (JSON):

json
{
  "email": "user@example.com",
  "password": "userpassword"
}
Response (JSON):


{
  "access_token": "jwt_token",
  "token_type": "bearer"
}